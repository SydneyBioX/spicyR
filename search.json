[{"path":"https://sydneybiox.github.io/spicyR/articles/spicyR.html","id":"installation","dir":"Articles","previous_headings":"","what":"Installation","title":"Spatial Linear and Mixed-Effects Modelling with spicy","text":"","code":"if (!require(\"BiocManager\")) {   install.packages(\"BiocManager\") } BiocManager::install(\"spicyR\") # load required packages library(spicyR) library(ggplot2) library(SpatialExperiment) library(SpatialDatasets) library(imcRtools)"},{"path":"https://sydneybiox.github.io/spicyR/articles/spicyR.html","id":"overview","dir":"Articles","previous_headings":"","what":"Overview","title":"Spatial Linear and Mixed-Effects Modelling with spicy","text":"guide provides step--step instructions apply linear model multiple segmented labelled images assess localisation different cell types changes across different disease conditions.","code":""},{"path":"https://sydneybiox.github.io/spicyR/articles/spicyR.html","id":"example-data","dir":"Articles","previous_headings":"","what":"Example data","title":"Spatial Linear and Mixed-Effects Modelling with spicy","text":"use Keren et al. (2018) breast cancer dataset compare spatial distribution immune cells individuals different levels tumour infiltration (cold compartmentalised). data stored SpatialExperiment object contains single-cell spatial data 41 images. cell types dataset includes 11 immune cell types (double negative CD3 T cells, CD4 T cells, B cells, monocytes, macrophages, CD8 T cells, neutrophils, natural killer cells, dendritic cells, regulatory T cells), 2 structural cell types (endothelial, mesenchymal), 2 tumour cell types (keratin+ tumour, tumour) one unidentified category.","code":"kerenSPE <- SpatialDatasets::spe_Keren_2018()"},{"path":"https://sydneybiox.github.io/spicyR/articles/spicyR.html","id":"linear-modelling","dir":"Articles","previous_headings":"","what":"Linear modelling","title":"Spatial Linear and Mixed-Effects Modelling with spicy","text":"investigate changes localisation two different cell types, measure level localisation two cell types modelling L-function. L-function variance-stabilised K-function given equation Liĵ(r)=Kiĵ(r)π \\widehat{L_{ij}} (r) = \\sqrt{\\frac{\\widehat{K_{ij}}(r)}{\\pi}} Kiĵ\\widehat{K_{ij}} defined Kiĵ(r)=|W|ninj∑ni∑nj1{dij≤r}eij(r) \\widehat{K_{ij}} (r) = \\frac{|W|}{n_i n_j} \\sum_{n_i} \\sum_{n_j} 1 \\{d_{ij} \\leq r \\} e_{ij} (r) Kiĵ\\widehat{K_{ij}} summarises degree co-localisation cell type jj cell type ii, nin_i njn_j number cells type ii jj, |W||W| image area, dijd_{ij} distance two cells eij(r)e_{ij} (r) edge correcting factor. Specifically, mean difference experimental function theoretical function used measure level localisation, defined u=∑r′=rminrmaxL̂ij,Experimental(r′)−L̂ij,Poisson(r′) u = \\sum_{r' = r_{\\text{min}}}^{r_{\\text{max}}} \\widehat L_{ij, \\text{Experimental}} (r') - \\widehat L_{ij, \\text{Poisson}} (r') uu sum taken discrete range rr rminr_{\\text{min}} rmaxr_{\\text{max}}. Differences statistic uu two conditions modelled using weighted linear model.","code":""},{"path":"https://sydneybiox.github.io/spicyR/articles/spicyR.html","id":"test-for-change-in-localisation-for-a-specific-pair-of-cells","dir":"Articles","previous_headings":"Linear modelling","what":"Test for change in localisation for a specific pair of cells","title":"Spatial Linear and Mixed-Effects Modelling with spicy","text":"Firstly, can test whether one cell type tends localised another cell type one condition compared . can done using spicy() function, specify condition parameter. example, want see whether neutrophils () tend found around CD8 T cells () compartmentalised tumours compared cold tumours. Given 3 conditions, can specify desired conditions setting order condition factor. spicy choose first level factor base condition second level comparison condition. spicy also naturally coerce condition column factor already factor. column containing cell type annotations can specified using cellTypeCol argument. default, spicy uses column named cellType SpatialExperiment object. obtain spicy object details results modelling performed. topPairs() function can used obtain associated coefficients p-value. coefficient spicyTestPair positive, find neutrophils significantly likely found near CD8 T cells compartmentalised tumours group compared cold tumour group.","code":"spicyTestPair <- spicy(   kerenSPE,   condition = \"tumour_type\",   from = \"CD8_T_cell\",   to = \"Neutrophils\" )  topPairs(spicyTestPair) #>                         intercept coefficient      p.value   adj.pvalue #> CD8_T_cell__Neutrophils  -109.081    112.0185 2.166646e-05 2.166646e-05 #>                               from          to #> CD8_T_cell__Neutrophils CD8_T_cell Neutrophils"},{"path":"https://sydneybiox.github.io/spicyR/articles/spicyR.html","id":"test-for-change-in-localisation-for-all-pairwise-cell-combinations","dir":"Articles","previous_headings":"Linear modelling","what":"Test for change in localisation for all pairwise cell combinations","title":"Spatial Linear and Mixed-Effects Modelling with spicy","text":"can perform pairwise combinations cell types excluding parameters spicy(). , obtain spicy object outlines result linear models performed pairwise combination cell types. can also examine L-function metrics individual images using convenient bind() function spicyTest results object. results can represented bubble plot using signifPlot() function.  , can observe significant relationships occur macrophages double negative CD3 T cells, suggesting two cell types far dispersed compartmentalised tumours compared cold tumours. examine specific cell type-cell type relationship detail, can use spicyBoxplot() specify either = \"Macrophages\" = \"dn_T_CD3\" rank = 1.","code":"spicyTest <- spicy(   kerenSPE,   condition = \"tumour_type\" )  topPairs(spicyTest) #>                             intercept coefficient      p.value   adj.pvalue #> Macrophages__dn_T_CD3       56.446064   -50.08474 1.080273e-07 3.035568e-05 #> dn_T_CD3__Macrophages       54.987151   -48.38664 2.194018e-07 3.082595e-05 #> Macrophages__DC_or_Mono     73.239404   -59.90361 5.224660e-06 4.893765e-04 #> DC_or_Mono__Macrophages     71.777087   -58.46833 7.431172e-06 5.220399e-04 #> dn_T_CD3__dn_T_CD3         -63.786032   100.61010 2.878804e-05 1.208706e-03 #> Neutrophils__dn_T_CD3      -63.141840    69.64356 2.891872e-05 1.208706e-03 #> dn_T_CD3__Neutrophils      -63.133725    70.15508 3.011012e-05 1.208706e-03 #> DC__Macrophages             96.893239   -92.55112 1.801300e-04 5.758129e-03 #> Macrophages__DC             96.896215   -93.25194 1.844241e-04 5.758129e-03 #> CD4_T_cell__Keratin_Tumour  -4.845037   -22.14995 2.834659e-04 7.409016e-03 #>                                   from             to #> Macrophages__dn_T_CD3      Macrophages       dn_T_CD3 #> dn_T_CD3__Macrophages         dn_T_CD3    Macrophages #> Macrophages__DC_or_Mono    Macrophages     DC_or_Mono #> DC_or_Mono__Macrophages     DC_or_Mono    Macrophages #> dn_T_CD3__dn_T_CD3            dn_T_CD3       dn_T_CD3 #> Neutrophils__dn_T_CD3      Neutrophils       dn_T_CD3 #> dn_T_CD3__Neutrophils         dn_T_CD3    Neutrophils #> DC__Macrophages                     DC    Macrophages #> Macrophages__DC            Macrophages             DC #> CD4_T_cell__Keratin_Tumour  CD4_T_cell Keratin_Tumour bind(spicyTest)[1:5, 1:5] #>   imageID         condition Keratin_Tumour__Keratin_Tumour #> 1       1             mixed                      -2.300602 #> 2       2             mixed                      -1.989699 #> 3       3 compartmentalised                      11.373530 #> 4       4 compartmentalised                      33.931133 #> 5       5 compartmentalised                      17.922818 #>   dn_T_CD3__Keratin_Tumour B_cell__Keratin_Tumour #> 1                -5.298543             -20.827279 #> 2               -16.020022               3.025815 #> 3               -21.857447             -24.962913 #> 4               -36.438476             -40.470221 #> 5               -20.816783             -38.138076 signifPlot(   spicyTest,   breaks = c(-3, 3, 1),   marksToPlot = c(\"Macrophages\", \"DC_or_Mono\", \"dn_T_CD3\", \"Neutrophils\",                   \"CD8_T_cell\", \"Keratin_Tumour\") ) spicyBoxPlot(results = spicyTest,               # from = \"Macrophages\",              # to = \"dn_T_CD3\"              rank = 1)"},{"path":"https://sydneybiox.github.io/spicyR/articles/spicyR.html","id":"linear-modelling-for-custom-metrics","dir":"Articles","previous_headings":"","what":"Linear modelling for custom metrics","title":"Spatial Linear and Mixed-Effects Modelling with spicy","text":"spicyR can also applied custom distance abundance metrics. kNN interactions graph can generated function buildSpatialGraph imcRtools package. generates colPairs object inside SpatialExperiment object. spicyR provides function convPairs converting colPairs object abundance matrix calculating average number nearby cells types every cell type given k. example, exists average 5 neutrophils every macrophage image 1, column neutrophil__macrophage value 5 image 1. custom distance abundance metrics can included analysis alternateResult parameter. Statial package contains custom distance metrics can used spicy.","code":"kerenSPE <- imcRtools::buildSpatialGraph(kerenSPE,                                           img_id = \"imageID\",                                           type = \"knn\", k = 20,                                         coords = c(\"x\", \"y\"))  pairAbundances <- convPairs(kerenSPE,                   colPair = \"knn_interaction_graph\")  head(pairAbundances[\"B_cell__B_cell\"]) #>    B_cell__B_cell #> 1      12.7349608 #> 10      0.2777778 #> 11      0.0000000 #> 12      1.3333333 #> 13      1.2200957 #> 14      0.0000000 spicyTestColPairs <- spicy(   kerenSPE,   condition = \"tumour_type\",   alternateResult = pairAbundances,   weights = FALSE )  topPairs(spicyTestColPairs) #>                            intercept coefficient     p.value adj.pvalue #> CD8_T_cell__Neutrophils  0.833333333  -0.7592968 0.002645466  0.3291833 #> B_cell__Tumour           0.001937984   0.2602822 0.004872664  0.3291833 #> Other_Immune__NK         0.012698413   0.2612881 0.005673068  0.3291833 #> Unidentified__CD8_T_cell 0.106626794   0.6387339 0.005906526  0.3291833 #> dn_T_CD3__NK             0.004242424   0.2148797 0.006317829  0.3291833 #> CD4_T_cell__Neutrophils  0.036213602   0.2947696 0.007902670  0.3291833 #> Tregs__CD4_T_cell        0.128876212   0.5726201 0.010207087  0.3291833 #> Endothelial__DC          0.008771930   0.3008523 0.011189533  0.3291833 #> Tumour__Neutrophils      0.021638939   0.2529045 0.011388850  0.3291833 #> Mesenchymal__Neutrophils 0.004504505   0.2494301 0.012761315  0.3291833 #>                                  from          to #> CD8_T_cell__Neutrophils    CD8_T_cell Neutrophils #> B_cell__Tumour                 B_cell      Tumour #> Other_Immune__NK         Other_Immune          NK #> Unidentified__CD8_T_cell Unidentified  CD8_T_cell #> dn_T_CD3__NK                 dn_T_CD3          NK #> CD4_T_cell__Neutrophils    CD4_T_cell Neutrophils #> Tregs__CD4_T_cell               Tregs  CD4_T_cell #> Endothelial__DC           Endothelial          DC #> Tumour__Neutrophils            Tumour Neutrophils #> Mesenchymal__Neutrophils  Mesenchymal Neutrophils signifPlot(   spicyTestColPairs,   breaks = c(-3, 3, 1),   marksToPlot = c(\"Macrophages\", \"dn_T_CD3\", \"CD4_T_cell\",                    \"B_cell\", \"DC_or_Mono\", \"Neutrophils\", \"CD8_T_cell\") )"},{"path":"https://sydneybiox.github.io/spicyR/articles/spicyR.html","id":"mixed-effects-modelling","dir":"Articles","previous_headings":"","what":"Mixed effects modelling","title":"Spatial Linear and Mixed-Effects Modelling with spicy","text":"spicyR supports mixed effects modelling multiple images obtained subject. case, subject treated random effect condition treated fixed effect. perform mixed effects modelling, can specify subject parameter spicy function.","code":"spicyMixedTest <- spicy(   diabetesData,   condition = \"stage\",   subject = \"case\" )"},{"path":"https://sydneybiox.github.io/spicyR/articles/spicyR.html","id":"references","dir":"Articles","previous_headings":"","what":"References","title":"Spatial Linear and Mixed-Effects Modelling with spicy","text":"","code":"sessionInfo() #> R version 4.4.1 (2024-06-14) #> Platform: x86_64-pc-linux-gnu #> Running under: Ubuntu 22.04.4 LTS #>  #> Matrix products: default #> BLAS:   /usr/lib/x86_64-linux-gnu/openblas-pthread/libblas.so.3  #> LAPACK: /usr/lib/x86_64-linux-gnu/openblas-pthread/libopenblasp-r0.3.20.so;  LAPACK version 3.10.0 #>  #> locale: #>  [1] LC_CTYPE=C.UTF-8       LC_NUMERIC=C           LC_TIME=C.UTF-8        #>  [4] LC_COLLATE=C.UTF-8     LC_MONETARY=C.UTF-8    LC_MESSAGES=C.UTF-8    #>  [7] LC_PAPER=C.UTF-8       LC_NAME=C              LC_ADDRESS=C           #> [10] LC_TELEPHONE=C         LC_MEASUREMENT=C.UTF-8 LC_IDENTIFICATION=C    #>  #> time zone: UTC #> tzcode source: system (glibc) #>  #> attached base packages: #> [1] stats4    stats     graphics  grDevices utils     datasets  methods   #> [8] base      #>  #> other attached packages: #>  [1] imcRtools_1.10.0            SpatialDatasets_1.2.0       #>  [3] ExperimentHub_2.12.0        AnnotationHub_3.12.0        #>  [5] BiocFileCache_2.12.0        dbplyr_2.5.0                #>  [7] SpatialExperiment_1.14.0    SingleCellExperiment_1.26.0 #>  [9] SummarizedExperiment_1.34.0 Biobase_2.64.0              #> [11] GenomicRanges_1.56.1        GenomeInfoDb_1.40.1         #> [13] IRanges_2.38.1              S4Vectors_0.42.1            #> [15] BiocGenerics_0.50.0         MatrixGenerics_1.16.0       #> [17] matrixStats_1.4.1           ggplot2_3.5.1               #> [19] spicyR_1.17.4               BiocStyle_2.32.1            #>  #> loaded via a namespace (and not attached): #>   [1] fs_1.6.4                    spatstat.sparse_3.1-0       #>   [3] bitops_1.0-8                sf_1.0-17                   #>   [5] EBImage_4.46.0              httr_1.4.7                  #>   [7] RColorBrewer_1.1-3          numDeriv_2016.8-1.1         #>   [9] tools_4.4.1                 backports_1.5.0             #>  [11] utf8_1.2.4                  R6_2.5.1                    #>  [13] DT_0.33                     HDF5Array_1.32.1            #>  [15] mgcv_1.9-1                  rhdf5filters_1.16.0         #>  [17] withr_3.0.1                 sp_2.1-4                    #>  [19] gridExtra_2.3               ClassifyR_3.8.3             #>  [21] cli_3.6.3                   textshaping_0.4.0           #>  [23] spatstat.explore_3.3-2      labeling_0.4.3              #>  [25] sass_0.4.9                  nnls_1.5                    #>  [27] spatstat.data_3.1-2         readr_2.1.5                 #>  [29] proxy_0.4-27                pkgdown_2.1.0               #>  [31] systemfonts_1.1.0           ggupset_0.4.0               #>  [33] svglite_2.1.3               RSQLite_2.3.7               #>  [35] generics_0.1.3              vroom_1.6.5                 #>  [37] spatstat.random_3.3-1       car_3.1-2                   #>  [39] dplyr_1.1.4                 scam_1.2-17                 #>  [41] Matrix_1.7-0                ggbeeswarm_0.7.2            #>  [43] fansi_1.0.6                 abind_1.4-5                 #>  [45] terra_1.7-78                lifecycle_1.0.4             #>  [47] yaml_2.3.10                 carData_3.0-5               #>  [49] rhdf5_2.48.0                SparseArray_1.4.8           #>  [51] grid_4.4.1                  blob_1.2.4                  #>  [53] promises_1.3.0              crayon_1.5.3                #>  [55] shinydashboard_0.7.2        lattice_0.22-6              #>  [57] beachmat_2.20.0             KEGGREST_1.44.1             #>  [59] magick_2.8.4                cytomapper_1.16.0           #>  [61] pillar_1.9.0                knitr_1.48                  #>  [63] RTriangle_1.6-0.14          rjson_0.2.22                #>  [65] boot_1.3-30                 codetools_0.2-20            #>  [67] glue_1.7.0                  spatstat.univar_3.0-1       #>  [69] data.table_1.16.0           MultiAssayExperiment_1.30.3 #>  [71] vctrs_0.6.5                 png_0.1-8                   #>  [73] gtable_0.3.5                cachem_1.1.0                #>  [75] xfun_0.47                   S4Arrays_1.4.1              #>  [77] mime_0.12                   tidygraph_1.3.1             #>  [79] survival_3.6-4              pheatmap_1.0.12             #>  [81] units_0.8-5                 nlme_3.1-164                #>  [83] bit64_4.0.5                 filelock_1.0.3              #>  [85] bslib_0.8.0                 svgPanZoom_0.3.4            #>  [87] KernSmooth_2.23-24          vipor_0.4.7                 #>  [89] colorspace_2.1-1            DBI_1.2.3                   #>  [91] raster_3.6-26               tidyselect_1.2.1            #>  [93] extrafontdb_1.0             bit_4.0.5                   #>  [95] compiler_4.4.1              curl_5.2.2                  #>  [97] BiocNeighbors_1.22.0        desc_1.4.3                  #>  [99] DelayedArray_0.30.1         bookdown_0.40               #> [101] scales_1.3.0                classInt_0.4-10             #> [103] distances_0.1.11            rappdirs_0.3.3              #> [105] tiff_0.1-12                 stringr_1.5.1               #> [107] digest_0.6.37               goftest_1.2-3               #> [109] fftwtools_0.9-11            spatstat.utils_3.1-0        #> [111] minqa_1.2.8                 rmarkdown_2.28              #> [113] XVector_0.44.0              htmltools_0.5.8.1           #> [115] pkgconfig_2.0.3             jpeg_0.1-10                 #> [117] extrafont_0.19              lme4_1.1-35.5               #> [119] sparseMatrixStats_1.16.0    highr_0.11                  #> [121] fastmap_1.2.0               rlang_1.1.4                 #> [123] htmlwidgets_1.6.4           UCSC.utils_1.0.0            #> [125] shiny_1.9.1                 DelayedMatrixStats_1.26.0   #> [127] farver_2.1.2                jquerylib_0.1.4             #> [129] jsonlite_1.8.8              BiocParallel_1.38.0         #> [131] RCurl_1.98-1.16             magrittr_2.0.3              #> [133] scuttle_1.14.0              GenomeInfoDbData_1.2.12     #> [135] Rhdf5lib_1.26.0             munsell_0.5.1               #> [137] Rcpp_1.0.13                 viridis_0.6.5               #> [139] stringi_1.8.4               ggraph_2.2.1                #> [141] zlibbioc_1.50.0             MASS_7.3-60.2               #> [143] plyr_1.8.9                  parallel_4.4.1              #> [145] ggrepel_0.9.6               deldir_2.0-4                #> [147] Biostrings_2.72.1           graphlayouts_1.1.1          #> [149] splines_4.4.1               tensor_1.5                  #> [151] hms_1.1.3                   locfit_1.5-9.10             #> [153] igraph_2.0.3                ggpubr_0.6.0                #> [155] spatstat.geom_3.3-2         ggsignif_0.6.4              #> [157] reshape2_1.4.4              BiocVersion_3.19.1          #> [159] evaluate_0.24.0             BiocManager_1.30.25         #> [161] nloptr_2.1.1                tzdb_0.4.0                  #> [163] tweenr_2.0.3                httpuv_1.6.15               #> [165] Rttf2pt1_1.3.12             tidyr_1.3.1                 #> [167] purrr_1.0.2                 polyclip_1.10-7             #> [169] ggforce_0.4.2               broom_1.0.6                 #> [171] xtable_1.8-4                e1071_1.7-14                #> [173] rstatix_0.7.2               later_1.3.2                 #> [175] class_7.3-22                viridisLite_0.4.2           #> [177] ragg_1.3.2                  tibble_3.2.1                #> [179] lmerTest_3.1-3              memoise_2.0.1               #> [181] beeswarm_0.4.0              AnnotationDbi_1.66.0        #> [183] concaveman_1.1.0"},{"path":"https://sydneybiox.github.io/spicyR/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Nicolas Canete. Author. Ellis Patrick. Author, maintainer. Nicholas Robertson. Contributor. Alex Qin. Contributor.","code":""},{"path":"https://sydneybiox.github.io/spicyR/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Canete N, Iyengar S, Ormerod J, Baharlou H, Harman , Patrick E (2022). “spicyR: spatial analysis situ cytometry data R.” Bioinformatics, 38(11), 3099–3105. doi:10.1093/bioinformatics/btac268, https://doi.org/10.1093/bioinformatics/btac268.","code":"@Article{,   title = {{spicyR: spatial analysis of in situ cytometry data in R}},   author = {Nicolas Canete and Sourish Iyengar and John Ormerod and Heeva Baharlou and Andrew Harman and Ellis Patrick},   year = {2022},   volume = {38},   number = {11},   pages = {3099–3105},   journal = {Bioinformatics},   doi = {10.1093/bioinformatics/btac268},   url = {https://doi.org/10.1093/bioinformatics/btac268}, }"},{"path":"https://sydneybiox.github.io/spicyR/index.html","id":"spicyr","dir":"","previous_headings":"","what":"Spatial analysis of in situ cytometry data","title":"Spatial analysis of in situ cytometry data","text":"Spatial analysis situ cytometry data.","code":""},{"path":"https://sydneybiox.github.io/spicyR/index.html","id":"overview","dir":"","previous_headings":"","what":"Overview","title":"Spatial analysis of in situ cytometry data","text":"spicyR package provides framework performing inference changes spatial relationships pairs cell types cell-resolution spatial omics technologies. spicyR consists three primary steps: () summarizing degree spatial localization pairs cell types image; (ii) modelling variability localization summary statistics function cell counts (iii) testing changes spatial localizations associated response variable.","code":""},{"path":"https://sydneybiox.github.io/spicyR/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Spatial analysis of in situ cytometry data","text":"Bioconductor release version, run following. like --date features, install recent development version.","code":"if (!require(\"BiocManager\", quietly = TRUE))     install.packages(\"BiocManager\")  BiocManager::install(\"spicyR\") # Install the development version from Bioconductor: if (!require(\"BiocManager\", quietly = TRUE))     install.packages(\"BiocManager\")  # The following initializes usage of Bioc devel # This will update all your Bioconductor packages to devel version BiocManager::install(version='devel')  BiocManager::install(\"spicyR\")  # Otherwise install the development version from GitHub: # install.packages(\"devtools\") devtools::install_github(\"ellispatrick/spicyR\") library(spicyR)"},{"path":"https://sydneybiox.github.io/spicyR/index.html","id":"submitting-an-issue-or-feature-request","dir":"","previous_headings":"","what":"Submitting an issue or feature request","title":"Spatial analysis of in situ cytometry data","text":"spicyR still active development. greatly appreciate feedback related package. R package related issues raised . general questions feedback, please contact us directly via ellis.patrick@sydney.edu.au.","code":""},{"path":"https://sydneybiox.github.io/spicyR/index.html","id":"authors","dir":"","previous_headings":"","what":"Authors","title":"Spatial analysis of in situ cytometry data","text":"Nicolas Canete Ellis Patrick - @TheEllisPatrick","code":""},{"path":"https://sydneybiox.github.io/spicyR/index.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Spatial analysis of in situ cytometry data","text":"Nicolas P Canete, Sourish S Iyengar, John T Ormerod, Heeva Baharlou, Andrew N Harman, Ellis Patrick, spicyR: spatial analysis situ cytometry data R, Bioinformatics, Volume 38, Issue 11, 1 June 2022, Pages 3099–3105, https://doi.org/10.1093/bioinformatics/btac268","code":""},{"path":"https://sydneybiox.github.io/spicyR/reference/bind.html","id":null,"dir":"Reference","previous_headings":"","what":"Produces a dataframe showing L-function metric for each imageID entry. — bind","title":"Produces a dataframe showing L-function metric for each imageID entry. — bind","text":"Produces dataframe showing L-function metric imageID entry.","code":""},{"path":"https://sydneybiox.github.io/spicyR/reference/bind.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Produces a dataframe showing L-function metric for each imageID entry. — bind","text":"","code":"bind(results, pairName = NULL)"},{"path":"https://sydneybiox.github.io/spicyR/reference/bind.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Produces a dataframe showing L-function metric for each imageID entry. — bind","text":"results Spicy test result obtained spicy. pairName string specifying pairwise interaction interest. NULL, pairwise interactions shown.","code":""},{"path":"https://sydneybiox.github.io/spicyR/reference/bind.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Produces a dataframe showing L-function metric for each imageID entry. — bind","text":"data.frame containing colData related results.","code":""},{"path":"https://sydneybiox.github.io/spicyR/reference/bind.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Produces a dataframe showing L-function metric for each imageID entry. — bind","text":"","code":"data(spicyTest) df <- bind(spicyTest)"},{"path":"https://sydneybiox.github.io/spicyR/reference/colTest.html","id":null,"dir":"Reference","previous_headings":"","what":"Perform a simple wilcoxon-rank-sum test or t-test on the columns of a data frame — colTest","title":"Perform a simple wilcoxon-rank-sum test or t-test on the columns of a data frame — colTest","text":"Perform simple wilcoxon-rank-sum test t-test columns data frame","code":""},{"path":"https://sydneybiox.github.io/spicyR/reference/colTest.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Perform a simple wilcoxon-rank-sum test or t-test on the columns of a data frame — colTest","text":"","code":"colTest(df, condition, type = NULL, feature = NULL, imageID = \"imageID\")"},{"path":"https://sydneybiox.github.io/spicyR/reference/colTest.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Perform a simple wilcoxon-rank-sum test or t-test on the columns of a data frame — colTest","text":"df data.frame SingleCellExperiment, SpatialExperiment condition condition interest type type test, \"wilcox\", \"ttest\" \"survival\". feature Can used calculate proportions feature image imageID imageID's presenting SingleCellExperiment","code":""},{"path":"https://sydneybiox.github.io/spicyR/reference/colTest.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Perform a simple wilcoxon-rank-sum test or t-test on the columns of a data frame — colTest","text":"Proportions","code":""},{"path":"https://sydneybiox.github.io/spicyR/reference/colTest.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Perform a simple wilcoxon-rank-sum test or t-test on the columns of a data frame — colTest","text":"","code":"# Test for an association with long-duration diabetes # This is clearly ignoring the repeated measures... data(\"diabetesData\") diabetesData <- spicyR:::.format_data(   diabetesData, \"imageID\", \"cellType\", c(\"x\", \"y\"), FALSE ) props <- getProp(diabetesData) condition <- spicyR:::getImagePheno(diabetesData)$stage names(condition) <- spicyR:::getImagePheno(diabetesData)$imageID condition <- condition[condition %in% c(\"Long-duration\", \"Onset\")] test <- colTest(props[names(condition), ], condition)"},{"path":"https://sydneybiox.github.io/spicyR/reference/convPairs.html","id":null,"dir":"Reference","previous_headings":"","what":"Converts colPairs object into an abundance matrix based on number of nearby interactions for every cell type. — convPairs","title":"Converts colPairs object into an abundance matrix based on number of nearby interactions for every cell type. — convPairs","text":"Converts colPairs object abundance matrix based number nearby interactions every cell type.","code":""},{"path":"https://sydneybiox.github.io/spicyR/reference/convPairs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Converts colPairs object into an abundance matrix based on number of nearby interactions for every cell type. — convPairs","text":"","code":"convPairs(cells, colPair, cellType = \"cellType\", imageID = \"imageID\")"},{"path":"https://sydneybiox.github.io/spicyR/reference/convPairs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Converts colPairs object into an abundance matrix based on number of nearby interactions for every cell type. — convPairs","text":"cells SingleCellExperiment contains objects colPairs slot. colPair name object colPairs slot dataframe constructed . cellType cell type using SingleCellExperiment. imageID image ID using SingleCellExperiment.","code":""},{"path":"https://sydneybiox.github.io/spicyR/reference/convPairs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Converts colPairs object into an abundance matrix based on number of nearby interactions for every cell type. — convPairs","text":"Matrix abundances","code":""},{"path":"https://sydneybiox.github.io/spicyR/reference/convPairs.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Converts colPairs object into an abundance matrix based on number of nearby interactions for every cell type. — convPairs","text":"","code":"data(\"diabetesData\") images <- c(\"A09\", \"A11\", \"A16\", \"A17\") diabetesData <- diabetesData[   , SummarizedExperiment::colData(diabetesData)$imageID %in% images ]  diabetesData_SPE <- SpatialExperiment::SpatialExperiment(diabetesData,   colData = SummarizedExperiment::colData(diabetesData) ) SpatialExperiment::spatialCoords(diabetesData_SPE) <- data.frame(   SummarizedExperiment::colData(diabetesData_SPE)$x,   SummarizedExperiment::colData(diabetesData_SPE)$y ) |>   as.matrix()  SpatialExperiment::spatialCoordsNames(diabetesData_SPE) <- c(\"x\", \"y\")  diabetesData_SPE <- imcRtools::buildSpatialGraph(diabetesData_SPE,   img_id = \"imageID\",   type = \"knn\",   k = 20,   coords = c(\"x\", \"y\") ) #> Warning: detected tied distances to neighbors, see ?'BiocNeighbors-ties' #> Warning: detected tied distances to neighbors, see ?'BiocNeighbors-ties' #> Warning: detected tied distances to neighbors, see ?'BiocNeighbors-ties' #> Warning: detected tied distances to neighbors, see ?'BiocNeighbors-ties' #> 'sample_id's are duplicated across 'SpatialExperiment' objects to cbind; appending sample indices. #> The returned object is ordered by the 'imageID' entry.  pairAbundances <- convPairs(diabetesData_SPE,   colPair = \"knn_interaction_graph\" )"},{"path":"https://sydneybiox.github.io/spicyR/reference/diabetesData.html","id":null,"dir":"Reference","previous_headings":"","what":"Diabetes IMC data in SCE format. — diabetesData","title":"Diabetes IMC data in SCE format. — diabetesData","text":"subset Damond et al 2019 imaging mass cytometry dataset. data contains cells pancreatic islets individuals early onset diabetes healthy controls. object contains single-cell data 160 images 8 subjects, 20 images per subject.","code":""},{"path":"https://sydneybiox.github.io/spicyR/reference/diabetesData.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Diabetes IMC data in SCE format. — diabetesData","text":"","code":"data(\"diabetesData\")"},{"path":"https://sydneybiox.github.io/spicyR/reference/diabetesData.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Diabetes IMC data in SCE format. — diabetesData","text":"diabetesData_SCE SingleCellExperiment object","code":""},{"path":"https://sydneybiox.github.io/spicyR/reference/diabetesData.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Diabetes IMC data in SCE format. — diabetesData","text":"Converted SingleCellExperiment format.","code":""},{"path":"https://sydneybiox.github.io/spicyR/reference/getPairwise.html","id":null,"dir":"Reference","previous_headings":"","what":"Get statistic from pairwise L curve of a single image. — getPairwise","title":"Get statistic from pairwise L curve of a single image. — getPairwise","text":"Get statistic pairwise L curve single image.","code":""},{"path":"https://sydneybiox.github.io/spicyR/reference/getPairwise.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get statistic from pairwise L curve of a single image. — getPairwise","text":"","code":"getPairwise(   cells,   from = NULL,   to = NULL,   window = \"convex\",   window.length = NULL,   Rs = c(20, 50, 100),   sigma = NULL,   minLambda = 0.05,   edgeCorrect = TRUE,   includeZeroCells = TRUE,   BPPARAM = BiocParallel::SerialParam(),   imageIDCol = \"imageID\",   cellTypeCol = \"cellType\",   spatialCoordCols = c(\"x\", \"y\") )"},{"path":"https://sydneybiox.github.io/spicyR/reference/getPairwise.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get statistic from pairwise L curve of a single image. — getPairwise","text":"cells SummarizedExperiment contains least variables x y, giving location coordinates cell, cellType. '' cellType generating L curve. '' cellType generating L curve. window window around regions 'square', 'convex' 'concave'. window.length tuning parameter controlling level concavity estimating concave windows. Rs vector radii measures association calculated. sigma numeric variable used scaling fitting inhomogeneous L-curves. minLambda Minimum value density scaling fitting inhomogeneous L-curves. edgeCorrect logical indicating whether perform edge correction. includeZeroCells logical indicating whether include cells zero counts pairwise association calculation. BPPARAM BiocParallelParam object. imageIDCol name imageID column using SingleCellExperiment SpatialExperiment. cellTypeCol name cellType column using SingleCellExperiment SpatialExperiment. spatialCoordCols names spatialCoords column using SingleCellExperiment.","code":""},{"path":"https://sydneybiox.github.io/spicyR/reference/getPairwise.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get statistic from pairwise L curve of a single image. — getPairwise","text":"Statistic pairwise L curve single image.","code":""},{"path":"https://sydneybiox.github.io/spicyR/reference/getPairwise.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get statistic from pairwise L curve of a single image. — getPairwise","text":"","code":"data(\"diabetesData\") # Subset by imageID for fast example selected_cells <- diabetesData[   , SummarizedExperiment::colData(diabetesData)$imageID == \"A09\" ] pairAssoc <- getPairwise(selected_cells)"},{"path":"https://sydneybiox.github.io/spicyR/reference/getProp.html","id":null,"dir":"Reference","previous_headings":"","what":"Get proportions from a SummarizedExperiment. — getProp","title":"Get proportions from a SummarizedExperiment. — getProp","text":"Get proportions SummarizedExperiment.","code":""},{"path":"https://sydneybiox.github.io/spicyR/reference/getProp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get proportions from a SummarizedExperiment. — getProp","text":"","code":"getProp(cells, feature = \"cellType\", imageID = \"imageID\")"},{"path":"https://sydneybiox.github.io/spicyR/reference/getProp.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get proportions from a SummarizedExperiment. — getProp","text":"cells SingleCellExperiment, SpatialExperiment data.frame. feature feature interest imageID imageID's","code":""},{"path":"https://sydneybiox.github.io/spicyR/reference/getProp.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get proportions from a SummarizedExperiment. — getProp","text":"Proportions","code":""},{"path":"https://sydneybiox.github.io/spicyR/reference/getProp.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get proportions from a SummarizedExperiment. — getProp","text":"","code":"data(\"diabetesData\") prop <- getProp(diabetesData)"},{"path":"https://sydneybiox.github.io/spicyR/reference/signifPlot.html","id":null,"dir":"Reference","previous_headings":"","what":"Plots result of signifPlot. — signifPlot","title":"Plots result of signifPlot. — signifPlot","text":"Plots result signifPlot.","code":""},{"path":"https://sydneybiox.github.io/spicyR/reference/signifPlot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plots result of signifPlot. — signifPlot","text":"","code":"signifPlot(   results,   fdr = FALSE,   type = \"bubble\",   breaks = NULL,   comparisonGroup = NULL,   colours = c(\"#4575B4\", \"white\", \"#D73027\"),   marksToPlot = NULL,   cutoff = 0.05 )"},{"path":"https://sydneybiox.github.io/spicyR/reference/signifPlot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plots result of signifPlot. — signifPlot","text":"results Data frame obtained spicy. fdr TRUE FDR correction used. type make bubble plot heatmap. breaks Vector 3 numbers giving breaks used pheatmap. first number minimum, second maximum, third number breaks. comparisonGroup string specifying name outcome group compare base group. colours Vector colours use pheatmap. marksToPlot Vector marks include pheatmap. cutoff significance threshold circles bubble plot","code":""},{"path":"https://sydneybiox.github.io/spicyR/reference/signifPlot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plots result of signifPlot. — signifPlot","text":"pheatmap object","code":""},{"path":"https://sydneybiox.github.io/spicyR/reference/signifPlot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plots result of signifPlot. — signifPlot","text":"","code":"data(spicyTest)  p <- signifPlot(spicyTest, breaks = c(-3, 3, 0.5)) #> Scanning ttf files in /usr/share/fonts/, /usr/local/share/fonts/ ... #> Extracting .afm files from .ttf files... #> /usr/share/fonts/truetype/dejavu/DejaVuSans-Bold.ttf #>  : DejaVuSans-Bold already registered in fonts database. Skipping. #> /usr/share/fonts/truetype/dejavu/DejaVuSans-BoldOblique.ttf #>  : DejaVuSans-BoldOblique already registered in fonts database. Skipping. #> /usr/share/fonts/truetype/dejavu/DejaVuSans-ExtraLight.ttf #>  : DejaVuSans-ExtraLight already registered in fonts database. Skipping. #> /usr/share/fonts/truetype/dejavu/DejaVuSans-Oblique.ttf #>  : DejaVuSans-Oblique already registered in fonts database. Skipping. #> /usr/share/fonts/truetype/dejavu/DejaVuSans.ttf #>  : DejaVuSans already registered in fonts database. Skipping. #> /usr/share/fonts/truetype/dejavu/DejaVuSansCondensed-Bold.ttf #>  : DejaVuSansCondensed-Bold already registered in fonts database. Skipping. #> /usr/share/fonts/truetype/dejavu/DejaVuSansCondensed-BoldOblique.ttf #>  : DejaVuSansCondensed-BoldOblique already registered in fonts database. Skipping. #> /usr/share/fonts/truetype/dejavu/DejaVuSansCondensed-Oblique.ttf #>  : DejaVuSansCondensed-Oblique already registered in fonts database. Skipping. #> /usr/share/fonts/truetype/dejavu/DejaVuSansCondensed.ttf #>  : DejaVuSansCondensed already registered in fonts database. Skipping. #> /usr/share/fonts/truetype/dejavu/DejaVuSansMono-Bold.ttf #>  : DejaVuSansMono-Bold already registered in fonts database. Skipping. #> /usr/share/fonts/truetype/dejavu/DejaVuSansMono-BoldOblique.ttf #>  : DejaVuSansMono-BoldOblique already registered in fonts database. Skipping. #> /usr/share/fonts/truetype/dejavu/DejaVuSansMono-Oblique.ttf #>  : DejaVuSansMono-Oblique already registered in fonts database. Skipping. #> /usr/share/fonts/truetype/dejavu/DejaVuSansMono.ttf #>  : DejaVuSansMono already registered in fonts database. Skipping. #> Found FontName for 0 fonts. #> Scanning afm files in /home/runner/work/_temp/Library/extrafontdb/metrics # plot includes unicode characters, do not use default pdf device ggplot2::ggsave(p, filename = tempfile(), device = cairo_pdf) #> Saving 6.67 x 6.67 in image"},{"path":"https://sydneybiox.github.io/spicyR/reference/spicy.html","id":null,"dir":"Reference","previous_headings":"","what":"Performs spatial tests on spatial cytometry data. — SpicyResults-class","title":"Performs spatial tests on spatial cytometry data. — SpicyResults-class","text":"Performs spatial tests spatial cytometry data.","code":""},{"path":"https://sydneybiox.github.io/spicyR/reference/spicy.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Performs spatial tests on spatial cytometry data. — SpicyResults-class","text":"","code":"spicy(   cells,   condition,   subject = NULL,   covariates = NULL,   from = NULL,   to = NULL,   imageIDCol = \"imageID\",   cellTypeCol = \"cellType\",   spatialCoordCols = c(\"x\", \"y\"),   alternateResult = NULL,   verbose = FALSE,   weights = TRUE,   weightsByPair = FALSE,   weightFactor = 1,   window = \"convex\",   window.length = NULL,   BPPARAM = BiocParallel::SerialParam(),   sigma = NULL,   Rs = NULL,   minLambda = 0.05,   edgeCorrect = TRUE,   includeZeroCells = FALSE,   ... )"},{"path":"https://sydneybiox.github.io/spicyR/reference/spicy.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Performs spatial tests on spatial cytometry data. — SpicyResults-class","text":"cells SummarizedExperiment data frame contains least  variables x y, giving location coordinates cell, cellType. condition Vector conditions tested corresponding image. subject Vector subject IDs corresponding image cells data frame. covariates Vector covariate names included mixed effects model fixed effects. vector cell types like compare vector vector cell types like compare vector imageIDCol image ID using SingleCellExperiment. cellTypeCol cell type using SingleCellExperiment. spatialCoordCols spatial coordinates using SingleCellExperiment. alternateResult pairwise association statistic combination celltypes image. verbose logical indicating whether output messages. weights logical indicating whether include weights based cell counts. weightsByPair logical indicating whether weights calculated cell type pair. weightFactor numeric controls convexity weight function. window window around regions 'square', 'convex' 'concave'. window.length tuning parameter controlling level concavity estimating concave windows. BPPARAM BiocParallelParam object. sigma numeric variable used scaling fitting inhomogeneous L-curves. Rs vector radii measures association calculated. NULL, Rs = c(20, 50, 100) specified default. minLambda Minimum value density scaling fitting inhomogeneous L-curves. edgeCorrect logical indicating whether perform edge correction. includeZeroCells logical indicating whether include cells zero counts pairwise association calculation. ... options.","code":""},{"path":"https://sydneybiox.github.io/spicyR/reference/spicy.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Performs spatial tests on spatial cytometry data. — SpicyResults-class","text":"Data frame p-values.","code":""},{"path":"https://sydneybiox.github.io/spicyR/reference/spicy.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Performs spatial tests on spatial cytometry data. — SpicyResults-class","text":"","code":"data(\"diabetesData\")  # Test with random effect for patient on a pairwise combination of cell # types. spicy(diabetesData,   condition = \"stage\", subject = \"case\",   from = \"Tc\", to = \"Th\" ) #>  #> Number of cell type pairs: 1 #> Number of differentially localised cell type pairs:  #> [1] 0  # Test all pairwise combinations of cell types without random effect of # patient. if (FALSE) { # \\dontrun{ spicyTest <- spicy(diabetesData, condition = \"stage\", subject = \"case\") } # }  # Test all pairwise combination of cell types with random effect of patient. if (FALSE) { # \\dontrun{ spicy(diabetesData, condition = \"condition\", subject = \"subject\") } # }"},{"path":"https://sydneybiox.github.io/spicyR/reference/spicyBoxPlot.html","id":null,"dir":"Reference","previous_headings":"","what":"Plots boxplot for a specified cell-cell relationship — spicyBoxPlot","title":"Plots boxplot for a specified cell-cell relationship — spicyBoxPlot","text":"Plots boxplot specified cell-cell relationship","code":""},{"path":"https://sydneybiox.github.io/spicyR/reference/spicyBoxPlot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plots boxplot for a specified cell-cell relationship — spicyBoxPlot","text":"","code":"spicyBoxPlot(results, from = NULL, to = NULL, rank = NULL)"},{"path":"https://sydneybiox.github.io/spicyR/reference/spicyBoxPlot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plots boxplot for a specified cell-cell relationship — spicyBoxPlot","text":"results Data frame obtained spicy. Cell type like compare cell type. Cell type like compare cell type. rank Ranking cell type terms p-value, smaller p-value higher rank.","code":""},{"path":"https://sydneybiox.github.io/spicyR/reference/spicyBoxPlot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plots boxplot for a specified cell-cell relationship — spicyBoxPlot","text":"ggplot2 boxplot","code":""},{"path":"https://sydneybiox.github.io/spicyR/reference/spicyBoxPlot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plots boxplot for a specified cell-cell relationship — spicyBoxPlot","text":"","code":"data(spicyTest)  spicyBoxPlot(spicyTest,              rank = 1) #> Warning: Removed 53 rows containing non-finite outside the scale range #> (`stat_boxplot()`)."},{"path":"https://sydneybiox.github.io/spicyR/reference/spicyTest.html","id":null,"dir":"Reference","previous_headings":"","what":"Results from spicy for diabetesData — spicyTest","title":"Results from spicy for diabetesData — spicyTest","text":"Results call: spicyTest <- spicy(diabetesData,                    condition = \"condition\",                    subject = \"subject\")","code":""},{"path":"https://sydneybiox.github.io/spicyR/reference/spicyTest.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Results from spicy for diabetesData — spicyTest","text":"","code":"data(\"spicyTest\")"},{"path":"https://sydneybiox.github.io/spicyR/reference/spicyTest.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Results from spicy for diabetesData — spicyTest","text":"spicyTest spicy object","code":""},{"path":"https://sydneybiox.github.io/spicyR/reference/topPairs.html","id":null,"dir":"Reference","previous_headings":"","what":"A table of the significant results from spicy tests — topPairs","title":"A table of the significant results from spicy tests — topPairs","text":"table significant results spicy tests","code":""},{"path":"https://sydneybiox.github.io/spicyR/reference/topPairs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A table of the significant results from spicy tests — topPairs","text":"","code":"topPairs(x, coef = NULL, n = 10, adj = \"fdr\", cutoff = NULL, figures = NULL)"},{"path":"https://sydneybiox.github.io/spicyR/reference/topPairs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"A table of the significant results from spicy tests — topPairs","text":"x output spicy. coef coefficient list. n Extract top n significant pairs. adj p-value adjustment method use, argument p.adjust(). cutoff p-value threshold extract significant pairs. figures Round `figures` significant figures.","code":""},{"path":"https://sydneybiox.github.io/spicyR/reference/topPairs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"A table of the significant results from spicy tests — topPairs","text":"data.frame","code":""},{"path":"https://sydneybiox.github.io/spicyR/reference/topPairs.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"A table of the significant results from spicy tests — topPairs","text":"","code":"data(spicyTest) topPairs(spicyTest) #>                          intercept coefficient      p.value adj.pvalue #> beta__delta           1.815458e+02  -48.735693 0.0005033247 0.07169649 #> delta__beta           1.817943e+02  -48.166076 0.0005601288 0.07169649 #> B__unknown           -3.606296e-15   11.770938 0.0052338392 0.42051606 #> delta__delta          2.089550e+02  -52.061196 0.0125129422 0.42051606 #> unknown__macrophage   1.007337e+01  -15.826919 0.0207410908 0.42051606 #> unknown__B           -5.161932e-15   12.142848 0.0225855419 0.42051606 #> macrophage__unknown   1.004424e+01  -14.471666 0.0244668075 0.42051606 #> B__Th                 1.571479e-15   26.847934 0.0245039854 0.42051606 #> otherimmune__naiveTc -9.292508e+00   33.584755 0.0255812944 0.42051606 #> ductal__ductal        1.481580e+01   -8.632569 0.0266935703 0.42051606 #>                             from         to #> beta__delta                 beta      delta #> delta__beta                delta       beta #> B__unknown                     B    unknown #> delta__delta               delta      delta #> unknown__macrophage      unknown macrophage #> unknown__B               unknown          B #> macrophage__unknown   macrophage    unknown #> B__Th                          B         Th #> otherimmune__naiveTc otherimmune    naiveTc #> ductal__ductal            ductal     ductal"}]
