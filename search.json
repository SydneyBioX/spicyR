[{"path":"https://sydneybiox.github.io/spicyR/articles/spicyR.html","id":"installation","dir":"Articles","previous_headings":"","what":"Installation","title":"Spatial Mixed-Effects Modelling with spicy","text":"","code":"if (!require(\"BiocManager\")) {   install.packages(\"BiocManager\") } BiocManager::install(\"spicyR\") # load required packages library(spicyR) library(ggplot2) library(SingleCellExperiment) library(SpatialExperiment) library(imcRtools)"},{"path":"https://sydneybiox.github.io/spicyR/articles/spicyR.html","id":"overview","dir":"Articles","previous_headings":"","what":"Overview","title":"Spatial Mixed-Effects Modelling with spicy","text":"guide provide step--step guide mixed effects models can applied multiple segmented labelled images identify localisation different cell types can change across different conditions. , subject modelled random effect, different conditions modelled fixed effect.","code":""},{"path":"https://sydneybiox.github.io/spicyR/articles/spicyR.html","id":"example-data","dir":"Articles","previous_headings":"","what":"Example data","title":"Spatial Mixed-Effects Modelling with spicy","text":", use subset Damond et al., 2019 imaging mass cytometry dataset. compare spatial distributions cells pancreatic islets individuals early onset diabetes healthy controls. diabetesData SingleCellExperiment object containing single-cell data 160 images 8 subjects, 20 images per subject. data set, cell types include immune cell types (B cells, naive T cells, T Helper cells, T cytotoxic cells, neutrophils, macrophages) pancreatic islet cells (alpha, beta, gamma, delta).","code":"data(\"diabetesData\") diabetesData #> class: SingleCellExperiment  #> dim: 0 253777  #> metadata(0): #> assays(0): #> rownames: NULL #> rowData names(0): #> colnames: NULL #> colData names(11): imageID cellID ... group stage #> reducedDimNames(0): #> mainExpName: NULL #> altExpNames(0):"},{"path":"https://sydneybiox.github.io/spicyR/articles/spicyR.html","id":"mixed-effects-modelling","dir":"Articles","previous_headings":"","what":"Mixed Effects Modelling","title":"Spatial Mixed-Effects Modelling with spicy","text":"investigate changes localisation two different cell types, measure level localisation two cell types modelling L-function. Specifically, mean difference obtained function theoretical function used measure level localisation. Differences statistic two conditions modelled using weighted mixed effects model, condition fixed effect subject random effect.","code":""},{"path":"https://sydneybiox.github.io/spicyR/articles/spicyR.html","id":"testing-for-change-in-localisation-for-a-specific-pair-of-cells","dir":"Articles","previous_headings":"Mixed Effects Modelling","what":"Testing for change in localisation for a specific pair of cells","title":"Spatial Mixed-Effects Modelling with spicy","text":"Firstly, can test whether one cell type tends localised another cell type one condition compared . can done using spicy() function, include condition, subject. example, want see whether Delta cells () tend found around Beta cells () onset diabetes images compared non-diabetic images. However, given 3 conditions, can specify desired conditions setting order condition factor. spicy() choose first level factor base condition second level comparison condition. spicy() also naturally coerce condition column factor already factor. obtain spicy object details results mixed effects modelling performed. coefficient spicyTest positive, find delta cells cells significantly less likely found near beta cells onset diabetes group compared non-diabetic control.","code":"spicyTestPair <- spicy(   diabetesData,   condition = \"stage\",   subject = \"case\",   from = \"beta\",   to = \"delta\" )  topPairs(spicyTestPair) #>             intercept coefficient     p.value  adj.pvalue from    to #> beta__delta  182.2128   -34.00085 0.008724782 0.008724782 beta delta"},{"path":"https://sydneybiox.github.io/spicyR/articles/spicyR.html","id":"test-for-change-in-localisation-for-all-pairwise-cell-combinations","dir":"Articles","previous_headings":"Mixed Effects Modelling","what":"Test for change in localisation for all pairwise cell combinations","title":"Spatial Mixed-Effects Modelling with spicy","text":", can perform pairwise combinations cell types excluding parameters spicy(). can also examine L-function metrics individual images using convenient bind() function spicyTest results object. , obtain spicy object outlines result mixed effects models performed pairwise combination cell types. can represent bubble plot using signifPlot() function providing spicy object obtained. , can observe significant relationships occur pancreatic beta delta cells, suggesting 2 cell types far localised diabetes onset compared non-diabetics. ’re interested wish examine specific cell type-cell type relationship detail, can use spicyBoxPlot, specifying relationship want examine. bubble plot , can see significant relationship beta delta islet cells pancreas. examine , can specify either = beta = delta rank = 1 parameters spicyBoxPlot.","code":"spicyTest <- spicy(   diabetesData,   condition = \"stage\",   subject = \"case\" )  topPairs(spicyTest) #>                          intercept coefficient      p.value adj.pvalue #> beta__delta           1.815457e+02  -48.736479 0.0005032491 0.07169646 #> delta__beta           1.817943e+02  -48.166076 0.0005601286 0.07169646 #> B__unknown           -1.442506e-15   11.770769 0.0052340673 0.42052603 #> delta__delta          2.089550e+02  -52.061196 0.0125129204 0.42052603 #> unknown__macrophage   1.007336e+01  -15.826911 0.0207411810 0.42052603 #> unknown__B           -2.212263e-15   12.142843 0.0225856400 0.42052603 #> macrophage__unknown   1.004422e+01  -14.471640 0.0244668217 0.42052603 #> B__Th                 4.714404e-15   26.847613 0.0245045799 0.42052603 #> otherimmune__naiveTc -9.292507e+00   33.584768 0.0255811877 0.42052603 #> ductal__ductal        1.481580e+01   -8.632552 0.0266937176 0.42052603 #>                             from         to #> beta__delta                 beta      delta #> delta__beta                delta       beta #> B__unknown                     B    unknown #> delta__delta               delta      delta #> unknown__macrophage      unknown macrophage #> unknown__B               unknown          B #> macrophage__unknown   macrophage    unknown #> B__Th                          B         Th #> otherimmune__naiveTc otherimmune    naiveTc #> ductal__ductal            ductal     ductal bind(spicyTest)[1:5, 1:5] #>   imageID condition subject ductal__ductal stromal__ductal #> 1     A09     Onset    6362      3.5882456        2.221666 #> 2     A11     Onset    6362      3.5803460       -5.070033 #> 3     A16     Onset    6362     29.8249524        7.859502 #> 4     A17     Onset    6362     30.8885146       20.136107 #> 5     A25     Onset    6362      0.9820586       -3.173230 signifPlot(   spicyTest,   breaks = c(-3, 3, 1),   marksToPlot = c(     \"alpha\", \"beta\", \"gamma\", \"delta\",     \"B\", \"naiveTc\", \"Th\", \"Tc\", \"neutrophil\", \"macrophage\"   ) ) spicyBoxPlot(results = spicyTest,              # from = \"beta\",              # to = \"delta\",              rank = 1)"},{"path":"https://sydneybiox.github.io/spicyR/articles/spicyR.html","id":"mixed-effects-modelling-for-custom-metrics","dir":"Articles","previous_headings":"Mixed Effects Modelling","what":"Mixed effects modelling for custom metrics","title":"Spatial Mixed-Effects Modelling with spicy","text":"spicyR can also applied custom distance abundance metrics. , provide example apply spicy function custom abundance metric. first obtain custom abundance metric converting SpatialExperiment object existing SingleCellExperiment object. KNN interactions graph generated function buildSpatialGraph imcRtools package. generates colPairs object inside SpatialExperiment object. spicyR provides function convPairs converting colPairs object stored within SingleCellExperiment object abundance matrix effectively calculating average number nearby cells types every cell type. example, exists average 5 neutrophils every macrophage image 1, column neutrophil__macrophage value 5 image 1. spicy can take input pairwise cell type combinations across multiple images run mixed effects model determine collective differences across conditions. spicy can take input pairwise cell type combinations across multiple images run mixed effects model determine collective differences across conditions. check custom distance metrics can used, feel free check Statial package. , can present spicy object bubble plot using signifPlot() function providing spicy object.","code":"diabetesData_SPE <- SpatialExperiment(diabetesData,                                       colData = colData(diabetesData))   spatialCoords(diabetesData_SPE) <- data.frame(colData(diabetesData_SPE)$x, colData(diabetesData_SPE)$y) |> as.matrix() spatialCoordsNames(diabetesData_SPE) <- c(\"x\", \"y\")  diabetesData_SPE <- imcRtools::buildSpatialGraph(diabetesData_SPE, img_id = \"imageID\", type = \"knn\", k = 20, coords = c(\"x\", \"y\")) #> 'sample_id's are duplicated across 'SpatialExperiment' objects to cbind; appending sample indices. #> The returned object is ordered by the 'imageID' entry.  pairAbundances <- convPairs(diabetesData_SPE,                   colPair = \"knn_interaction_graph\")  head(pairAbundances[\"delta__delta\"]) #>     delta__delta #> A09     2.590909 #> A11     4.816901 #> A16     1.769231 #> A17     0.500000 #> A25     0.000000 #> A39     1.354839 spicyTestColPairs <- spicy(   diabetesData_SPE,   condition = \"stage\",   subject = \"case\",   alternateResult = pairAbundances,   weights = FALSE )  topPairs(spicyTestColPairs) #>                           intercept coefficient     p.value adj.pvalue #> otherimmune__acinar    8.014651e+00 -3.94111077 0.001992740  0.1479393 #> macrophage__macrophage 1.524442e-03  0.01186938 0.003008538  0.1479393 #> acinar__delta          3.040471e-17  0.19829545 0.004003918  0.1479393 #> gamma__endothelial     3.206950e-01  0.63169966 0.004155627  0.1479393 #> ductal__stromal        6.534490e+00 -2.57742854 0.004447591  0.1479393 #> ductal__otherimmune    1.200000e+00  5.09868056 0.004738815  0.1479393 #> Th__otherimmune        1.982832e-01  0.61070185 0.005878459  0.1479393 #> unknown__alpha         3.560011e-01  0.65020515 0.006006260  0.1479393 #> Th__stromal            9.233434e+00 -3.42016198 0.006338838  0.1479393 #> endothelial__ductal    8.673736e-04  0.01574398 0.006775857  0.1479393 #>                               from          to #> otherimmune__acinar    otherimmune      acinar #> macrophage__macrophage  macrophage  macrophage #> acinar__delta               acinar       delta #> gamma__endothelial           gamma endothelial #> ductal__stromal             ductal     stromal #> ductal__otherimmune         ductal otherimmune #> Th__otherimmune                 Th otherimmune #> unknown__alpha             unknown       alpha #> Th__stromal                     Th     stromal #> endothelial__ductal    endothelial      ductal signifPlot(   spicyTestColPairs,   marksToPlot = c(     \"alpha\", \"acinar\", \"ductal\", \"naiveTc\", \"neutrophil\", \"Tc\",     \"Th\", \"otherimmune\"   ) )"},{"path":"https://sydneybiox.github.io/spicyR/articles/spicyR.html","id":"sessioninfo","dir":"Articles","previous_headings":"","what":"sessionInfo()","title":"Spatial Mixed-Effects Modelling with spicy","text":"","code":"sessionInfo() #> R version 4.4.1 (2024-06-14) #> Platform: x86_64-pc-linux-gnu #> Running under: Ubuntu 22.04.4 LTS #>  #> Matrix products: default #> BLAS:   /usr/lib/x86_64-linux-gnu/openblas-pthread/libblas.so.3  #> LAPACK: /usr/lib/x86_64-linux-gnu/openblas-pthread/libopenblasp-r0.3.20.so;  LAPACK version 3.10.0 #>  #> locale: #>  [1] LC_CTYPE=C.UTF-8       LC_NUMERIC=C           LC_TIME=C.UTF-8        #>  [4] LC_COLLATE=C.UTF-8     LC_MONETARY=C.UTF-8    LC_MESSAGES=C.UTF-8    #>  [7] LC_PAPER=C.UTF-8       LC_NAME=C              LC_ADDRESS=C           #> [10] LC_TELEPHONE=C         LC_MEASUREMENT=C.UTF-8 LC_IDENTIFICATION=C    #>  #> time zone: UTC #> tzcode source: system (glibc) #>  #> attached base packages: #> [1] stats4    stats     graphics  grDevices utils     datasets  methods   #> [8] base      #>  #> other attached packages: #>  [1] imcRtools_1.10.0            SpatialExperiment_1.14.0    #>  [3] SingleCellExperiment_1.26.0 SummarizedExperiment_1.34.0 #>  [5] Biobase_2.64.0              GenomicRanges_1.56.1        #>  [7] GenomeInfoDb_1.40.1         IRanges_2.38.1              #>  [9] S4Vectors_0.42.1            BiocGenerics_0.50.0         #> [11] MatrixGenerics_1.16.0       matrixStats_1.3.0           #> [13] ggplot2_3.5.1               spicyR_1.17.1               #> [15] BiocStyle_2.32.1            #>  #> loaded via a namespace (and not attached): #>   [1] splines_4.4.1               later_1.3.2                 #>   [3] bitops_1.0-7                svgPanZoom_0.3.4            #>   [5] tibble_3.2.1                polyclip_1.10-7             #>   [7] lifecycle_1.0.4             sf_1.0-16                   #>   [9] rstatix_0.7.2               vroom_1.6.5                 #>  [11] lattice_0.22-6              MASS_7.3-60.2               #>  [13] MultiAssayExperiment_1.30.3 backports_1.5.0             #>  [15] magrittr_2.0.3              sass_0.4.9                  #>  [17] rmarkdown_2.27              jquerylib_0.1.4             #>  [19] yaml_2.3.10                 httpuv_1.6.15               #>  [21] ClassifyR_3.8.3             sp_2.1-4                    #>  [23] spatstat.sparse_3.1-0       DBI_1.2.3                   #>  [25] minqa_1.2.7                 RColorBrewer_1.1-3          #>  [27] abind_1.4-5                 zlibbioc_1.50.0             #>  [29] purrr_1.0.2                 ggraph_2.2.1                #>  [31] RCurl_1.98-1.16             tweenr_2.0.3                #>  [33] GenomeInfoDbData_1.2.12     ggrepel_0.9.5               #>  [35] RTriangle_1.6-0.13          spatstat.utils_3.0-5        #>  [37] terra_1.7-78                pheatmap_1.0.12             #>  [39] units_0.8-5                 goftest_1.2-3               #>  [41] spatstat.random_3.3-1       DelayedMatrixStats_1.26.0   #>  [43] svglite_2.1.3               pkgdown_2.1.0               #>  [45] codetools_0.2-20            DelayedArray_0.30.1         #>  [47] scuttle_1.14.0              DT_0.33                     #>  [49] ggforce_0.4.2               tidyselect_1.2.1            #>  [51] raster_3.6-26               UCSC.utils_1.0.0            #>  [53] farver_2.1.2                lme4_1.1-35.5               #>  [55] viridis_0.6.5               spatstat.explore_3.3-1      #>  [57] jsonlite_1.8.8              BiocNeighbors_1.22.0        #>  [59] e1071_1.7-14                tidygraph_1.3.1             #>  [61] survival_3.6-4              systemfonts_1.1.0           #>  [63] tools_4.4.1                 ragg_1.3.2                  #>  [65] Rcpp_1.0.13                 glue_1.7.0                  #>  [67] gridExtra_2.3               SparseArray_1.4.8           #>  [69] xfun_0.46                   mgcv_1.9-1                  #>  [71] EBImage_4.46.0              dplyr_1.1.4                 #>  [73] HDF5Array_1.32.0            scam_1.2-17                 #>  [75] shinydashboard_0.7.2        withr_3.0.0                 #>  [77] numDeriv_2016.8-1.1         BiocManager_1.30.23         #>  [79] fastmap_1.2.0               boot_1.3-30                 #>  [81] rhdf5filters_1.16.0         fansi_1.0.6                 #>  [83] digest_0.6.36               R6_2.5.1                    #>  [85] mime_0.12                   textshaping_0.4.0           #>  [87] colorspace_2.1-1            tensor_1.5                  #>  [89] jpeg_0.1-10                 spatstat.data_3.1-2         #>  [91] utf8_1.2.4                  tidyr_1.3.1                 #>  [93] generics_0.1.3              data.table_1.15.4           #>  [95] class_7.3-22                graphlayouts_1.1.1          #>  [97] httr_1.4.7                  htmlwidgets_1.6.4           #>  [99] S4Arrays_1.4.1              pkgconfig_2.0.3             #> [101] gtable_0.3.5                XVector_0.44.0              #> [103] htmltools_0.5.8.1           carData_3.0-5               #> [105] bookdown_0.40               fftwtools_0.9-11            #> [107] scales_1.3.0                ggupset_0.4.0               #> [109] png_0.1-8                   spatstat.univar_3.0-0       #> [111] knitr_1.48                  tzdb_0.4.0                  #> [113] reshape2_1.4.4              rjson_0.2.21                #> [115] nlme_3.1-164                nloptr_2.1.1                #> [117] proxy_0.4-27                cachem_1.1.0                #> [119] rhdf5_2.48.0                stringr_1.5.1               #> [121] KernSmooth_2.23-24          vipor_0.4.7                 #> [123] parallel_4.4.1              concaveman_1.1.0            #> [125] desc_1.4.3                  pillar_1.9.0                #> [127] grid_4.4.1                  vctrs_0.6.5                 #> [129] promises_1.3.0              ggpubr_0.6.0                #> [131] car_3.1-2                   beachmat_2.20.0             #> [133] distances_0.1.10            xtable_1.8-4                #> [135] beeswarm_0.4.0              evaluate_0.24.0             #> [137] readr_2.1.5                 magick_2.8.4                #> [139] cli_3.6.3                   locfit_1.5-9.10             #> [141] compiler_4.4.1              rlang_1.1.4                 #> [143] crayon_1.5.3                ggsignif_0.6.4              #> [145] labeling_0.4.3              classInt_0.4-10             #> [147] ggbeeswarm_0.7.2            plyr_1.8.9                  #> [149] fs_1.6.4                    stringi_1.8.4               #> [151] nnls_1.5                    viridisLite_0.4.2           #> [153] deldir_2.0-4                BiocParallel_1.38.0         #> [155] cytomapper_1.16.0           lmerTest_3.1-3              #> [157] munsell_0.5.1               tiff_0.1-12                 #> [159] spatstat.geom_3.3-2         Matrix_1.7-0                #> [161] hms_1.1.3                   bit64_4.0.5                 #> [163] sparseMatrixStats_1.16.0    Rhdf5lib_1.26.0             #> [165] shiny_1.8.1.1               highr_0.11                  #> [167] igraph_2.0.3                broom_1.0.6                 #> [169] memoise_2.0.1               bslib_0.7.0                 #> [171] bit_4.0.5"},{"path":"https://sydneybiox.github.io/spicyR/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Nicolas Canete. Author. Ellis Patrick. Author, maintainer. Nicholas Robertson. Contributor. Alex Qin. Contributor.","code":""},{"path":"https://sydneybiox.github.io/spicyR/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Canete N, Iyengar S, Ormerod J, Baharlou H, Harman , Patrick E (2022). “spicyR: spatial analysis situ cytometry data R.” Bioinformatics, 38(11), 3099–3105. doi:10.1093/bioinformatics/btac268, https://doi.org/10.1093/bioinformatics/btac268.","code":"@Article{,   title = {{spicyR: spatial analysis of in situ cytometry data in R}},   author = {Nicolas Canete and Sourish Iyengar and John Ormerod and Heeva Baharlou and Andrew Harman and Ellis Patrick},   year = {2022},   volume = {38},   number = {11},   pages = {3099–3105},   journal = {Bioinformatics},   doi = {10.1093/bioinformatics/btac268},   url = {https://doi.org/10.1093/bioinformatics/btac268}, }"},{"path":"https://sydneybiox.github.io/spicyR/index.html","id":"spicyr","dir":"","previous_headings":"","what":"Spatial analysis of in situ cytometry data","title":"Spatial analysis of in situ cytometry data","text":"Spatial analysis situ cytometry data.","code":""},{"path":"https://sydneybiox.github.io/spicyR/index.html","id":"overview","dir":"","previous_headings":"","what":"Overview","title":"Spatial analysis of in situ cytometry data","text":"spicyR package provides framework performing inference changes spatial relationships pairs cell types cell-resolution spatial omics technologies. spicyR consists three primary steps: () summarizing degree spatial localization pairs cell types image; (ii) modelling variability localization summary statistics function cell counts (iii) testing changes spatial localizations associated response variable.","code":""},{"path":"https://sydneybiox.github.io/spicyR/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Spatial analysis of in situ cytometry data","text":"Bioconductor release version, run following. like --date features, install recent development version.","code":"if (!require(\"BiocManager\", quietly = TRUE))     install.packages(\"BiocManager\")  BiocManager::install(\"spicyR\") # Install the development version from Bioconductor: if (!require(\"BiocManager\", quietly = TRUE))     install.packages(\"BiocManager\")  # The following initializes usage of Bioc devel # This will update all your Bioconductor packages to devel version BiocManager::install(version='devel')  BiocManager::install(\"spicyR\")  # Otherwise install the development version from GitHub: # install.packages(\"devtools\") devtools::install_github(\"ellispatrick/spicyR\") library(spicyR)"},{"path":"https://sydneybiox.github.io/spicyR/index.html","id":"submitting-an-issue-or-feature-request","dir":"","previous_headings":"","what":"Submitting an issue or feature request","title":"Spatial analysis of in situ cytometry data","text":"spicyR still active development. greatly appreciate feedback related package. R package related issues raised . general questions feedback, please contact us directly via ellis.patrick@sydney.edu.au.","code":""},{"path":"https://sydneybiox.github.io/spicyR/index.html","id":"authors","dir":"","previous_headings":"","what":"Authors","title":"Spatial analysis of in situ cytometry data","text":"Nicolas Canete Ellis Patrick - @TheEllisPatrick","code":""},{"path":"https://sydneybiox.github.io/spicyR/index.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Spatial analysis of in situ cytometry data","text":"Nicolas P Canete, Sourish S Iyengar, John T Ormerod, Heeva Baharlou, Andrew N Harman, Ellis Patrick, spicyR: spatial analysis situ cytometry data R, Bioinformatics, Volume 38, Issue 11, 1 June 2022, Pages 3099–3105, https://doi.org/10.1093/bioinformatics/btac268","code":""},{"path":"https://sydneybiox.github.io/spicyR/reference/bind.html","id":null,"dir":"Reference","previous_headings":"","what":"Produces a dataframe showing L-function metric for each imageID entry. — bind","title":"Produces a dataframe showing L-function metric for each imageID entry. — bind","text":"Produces dataframe showing L-function metric imageID entry.","code":""},{"path":"https://sydneybiox.github.io/spicyR/reference/bind.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Produces a dataframe showing L-function metric for each imageID entry. — bind","text":"","code":"bind(results, pairName = NULL)"},{"path":"https://sydneybiox.github.io/spicyR/reference/bind.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Produces a dataframe showing L-function metric for each imageID entry. — bind","text":"results Spicy test result obtained spicy. pairName string specifying pairwise interaction interest. NULL, pairwise interactions shown.","code":""},{"path":"https://sydneybiox.github.io/spicyR/reference/bind.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Produces a dataframe showing L-function metric for each imageID entry. — bind","text":"data.frame containing colData related results.","code":""},{"path":"https://sydneybiox.github.io/spicyR/reference/bind.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Produces a dataframe showing L-function metric for each imageID entry. — bind","text":"","code":"data(spicyTest) df <- bind(spicyTest)"},{"path":"https://sydneybiox.github.io/spicyR/reference/colTest.html","id":null,"dir":"Reference","previous_headings":"","what":"Perform a simple wilcoxon-rank-sum test or t-test on the columns of a data frame — colTest","title":"Perform a simple wilcoxon-rank-sum test or t-test on the columns of a data frame — colTest","text":"Perform simple wilcoxon-rank-sum test t-test columns data frame","code":""},{"path":"https://sydneybiox.github.io/spicyR/reference/colTest.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Perform a simple wilcoxon-rank-sum test or t-test on the columns of a data frame — colTest","text":"","code":"colTest(df, condition, type = NULL, feature = NULL, imageID = \"imageID\")"},{"path":"https://sydneybiox.github.io/spicyR/reference/colTest.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Perform a simple wilcoxon-rank-sum test or t-test on the columns of a data frame — colTest","text":"df data.frame SingleCellExperiment, SpatialExperiment condition condition interest type type test, \"wilcox\", \"ttest\" \"survival\". feature Can used calculate proportions feature image imageID imageID's presenting SingleCellExperiment","code":""},{"path":"https://sydneybiox.github.io/spicyR/reference/colTest.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Perform a simple wilcoxon-rank-sum test or t-test on the columns of a data frame — colTest","text":"Proportions","code":""},{"path":"https://sydneybiox.github.io/spicyR/reference/colTest.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Perform a simple wilcoxon-rank-sum test or t-test on the columns of a data frame — colTest","text":"","code":"# Test for an association with long-duration diabetes # This is clearly ignoring the repeated measures... data(\"diabetesData\") diabetesData <- spicyR:::.format_data(   diabetesData, \"imageID\", \"cellType\", c(\"x\", \"y\"), FALSE ) props <- getProp(diabetesData) condition <- spicyR:::getImagePheno(diabetesData)$stage names(condition) <- spicyR:::getImagePheno(diabetesData)$imageID condition <- condition[condition %in% c(\"Long-duration\", \"Onset\")] test <- colTest(props[names(condition), ], condition)"},{"path":"https://sydneybiox.github.io/spicyR/reference/convPairs.html","id":null,"dir":"Reference","previous_headings":"","what":"Converts colPairs object into an abundance matrix based on number of nearby interactions for every cell type. — convPairs","title":"Converts colPairs object into an abundance matrix based on number of nearby interactions for every cell type. — convPairs","text":"Converts colPairs object abundance matrix based number nearby interactions every cell type.","code":""},{"path":"https://sydneybiox.github.io/spicyR/reference/convPairs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Converts colPairs object into an abundance matrix based on number of nearby interactions for every cell type. — convPairs","text":"","code":"convPairs(cells, colPair, cellType = \"cellType\", imageID = \"imageID\")"},{"path":"https://sydneybiox.github.io/spicyR/reference/convPairs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Converts colPairs object into an abundance matrix based on number of nearby interactions for every cell type. — convPairs","text":"cells SingleCellExperiment contains objects colPairs slot. colPair name object colPairs slot dataframe constructed . cellType cell type using SingleCellExperiment. imageID image ID using SingleCellExperiment.","code":""},{"path":"https://sydneybiox.github.io/spicyR/reference/convPairs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Converts colPairs object into an abundance matrix based on number of nearby interactions for every cell type. — convPairs","text":"Matrix abundances","code":""},{"path":"https://sydneybiox.github.io/spicyR/reference/convPairs.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Converts colPairs object into an abundance matrix based on number of nearby interactions for every cell type. — convPairs","text":"","code":"data(\"diabetesData\") images <- c(\"A09\", \"A11\", \"A16\", \"A17\") diabetesData <- diabetesData[   , SummarizedExperiment::colData(diabetesData)$imageID %in% images ]  diabetesData_SPE <- SpatialExperiment::SpatialExperiment(diabetesData,   colData = SummarizedExperiment::colData(diabetesData) ) SpatialExperiment::spatialCoords(diabetesData_SPE) <- data.frame(   SummarizedExperiment::colData(diabetesData_SPE)$x,   SummarizedExperiment::colData(diabetesData_SPE)$y ) |>   as.matrix()  SpatialExperiment::spatialCoordsNames(diabetesData_SPE) <- c(\"x\", \"y\")  diabetesData_SPE <- imcRtools::buildSpatialGraph(diabetesData_SPE,   img_id = \"imageID\",   type = \"knn\",   k = 20,   coords = c(\"x\", \"y\") ) #> Warning: detected tied distances to neighbors, see ?'BiocNeighbors-ties' #> Warning: detected tied distances to neighbors, see ?'BiocNeighbors-ties' #> Warning: detected tied distances to neighbors, see ?'BiocNeighbors-ties' #> Warning: detected tied distances to neighbors, see ?'BiocNeighbors-ties' #> 'sample_id's are duplicated across 'SpatialExperiment' objects to cbind; appending sample indices. #> The returned object is ordered by the 'imageID' entry.  pairAbundances <- convPairs(diabetesData_SPE,   colPair = \"knn_interaction_graph\" )"},{"path":"https://sydneybiox.github.io/spicyR/reference/diabetesData.html","id":null,"dir":"Reference","previous_headings":"","what":"Diabetes IMC data in SCE format. — diabetesData","title":"Diabetes IMC data in SCE format. — diabetesData","text":"subset Damond et al 2019 imaging mass cytometry dataset. data contains cells pancreatic islets individuals early onset diabetes healthy controls. object contains single-cell data 160 images 8 subjects, 20 images per subject.","code":""},{"path":"https://sydneybiox.github.io/spicyR/reference/diabetesData.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Diabetes IMC data in SCE format. — diabetesData","text":"","code":"data(\"diabetesData\")"},{"path":"https://sydneybiox.github.io/spicyR/reference/diabetesData.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Diabetes IMC data in SCE format. — diabetesData","text":"diabetesData_SCE SingleCellExperiment object","code":""},{"path":"https://sydneybiox.github.io/spicyR/reference/diabetesData.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Diabetes IMC data in SCE format. — diabetesData","text":"Converted SingleCellExperiment format.","code":""},{"path":"https://sydneybiox.github.io/spicyR/reference/getPairwise.html","id":null,"dir":"Reference","previous_headings":"","what":"Get statistic from pairwise L curve of a single image. — getPairwise","title":"Get statistic from pairwise L curve of a single image. — getPairwise","text":"Get statistic pairwise L curve single image.","code":""},{"path":"https://sydneybiox.github.io/spicyR/reference/getPairwise.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get statistic from pairwise L curve of a single image. — getPairwise","text":"","code":"getPairwise(   cells,   from = NULL,   to = NULL,   window = \"convex\",   window.length = NULL,   Rs = c(20, 50, 100),   sigma = NULL,   minLambda = 0.05,   edgeCorrect = TRUE,   includeZeroCells = TRUE,   BPPARAM = BiocParallel::SerialParam(),   imageIDCol = \"imageID\",   cellTypeCol = \"cellType\",   spatialCoordCols = c(\"x\", \"y\") )"},{"path":"https://sydneybiox.github.io/spicyR/reference/getPairwise.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get statistic from pairwise L curve of a single image. — getPairwise","text":"cells SummarizedExperiment contains least variables x y, giving location coordinates cell, cellType. '' cellType generating L curve. '' cellType generating L curve. window window around regions 'square', 'convex' 'concave'. window.length tuning parameter controlling level concavity estimating concave windows. Rs vector radii measures association calculated. sigma numeric variable used scaling fitting inhomogeneous L-curves. minLambda Minimum value density scaling fitting inhomogeneous L-curves. edgeCorrect logical indicating whether perform edge correction. includeZeroCells logical indicating whether include cells zero counts pairwise association calculation. BPPARAM BiocParallelParam object. imageIDCol name imageID column using SingleCellExperiment SpatialExperiment. cellTypeCol name cellType column using SingleCellExperiment SpatialExperiment. spatialCoordCols names spatialCoords column using SingleCellExperiment.","code":""},{"path":"https://sydneybiox.github.io/spicyR/reference/getPairwise.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get statistic from pairwise L curve of a single image. — getPairwise","text":"Statistic pairwise L curve single image.","code":""},{"path":"https://sydneybiox.github.io/spicyR/reference/getPairwise.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get statistic from pairwise L curve of a single image. — getPairwise","text":"","code":"data(\"diabetesData\") # Subset by imageID for fast example selected_cells <- diabetesData[   , SummarizedExperiment::colData(diabetesData)$imageID == \"A09\" ] pairAssoc <- getPairwise(selected_cells)"},{"path":"https://sydneybiox.github.io/spicyR/reference/getProp.html","id":null,"dir":"Reference","previous_headings":"","what":"Get proportions from a SummarizedExperiment. — getProp","title":"Get proportions from a SummarizedExperiment. — getProp","text":"Get proportions SummarizedExperiment.","code":""},{"path":"https://sydneybiox.github.io/spicyR/reference/getProp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get proportions from a SummarizedExperiment. — getProp","text":"","code":"getProp(cells, feature = \"cellType\", imageID = \"imageID\")"},{"path":"https://sydneybiox.github.io/spicyR/reference/getProp.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get proportions from a SummarizedExperiment. — getProp","text":"cells SingleCellExperiment, SpatialExperiment data.frame. feature feature interest imageID imageID's","code":""},{"path":"https://sydneybiox.github.io/spicyR/reference/getProp.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get proportions from a SummarizedExperiment. — getProp","text":"Proportions","code":""},{"path":"https://sydneybiox.github.io/spicyR/reference/getProp.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get proportions from a SummarizedExperiment. — getProp","text":"","code":"data(\"diabetesData\") prop <- getProp(diabetesData)"},{"path":"https://sydneybiox.github.io/spicyR/reference/signifPlot.html","id":null,"dir":"Reference","previous_headings":"","what":"Plots result of signifPlot. — signifPlot","title":"Plots result of signifPlot. — signifPlot","text":"Plots result signifPlot.","code":""},{"path":"https://sydneybiox.github.io/spicyR/reference/signifPlot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plots result of signifPlot. — signifPlot","text":"","code":"signifPlot(   results,   fdr = FALSE,   type = \"bubble\",   breaks = NULL,   comparisonGroup = NULL,   colours = c(\"#4575B4\", \"white\", \"#D73027\"),   marksToPlot = NULL,   cutoff = 0.05 )"},{"path":"https://sydneybiox.github.io/spicyR/reference/signifPlot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plots result of signifPlot. — signifPlot","text":"results Data frame obtained spicy. fdr TRUE FDR correction used. type make bubble plot heatmap. breaks Vector 3 numbers giving breaks used pheatmap. first number minimum, second maximum, third number breaks. comparisonGroup string specifying name outcome group compare base group. colours Vector colours use pheatmap. marksToPlot Vector marks include pheatmap. cutoff significance threshold circles bubble plot","code":""},{"path":"https://sydneybiox.github.io/spicyR/reference/signifPlot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plots result of signifPlot. — signifPlot","text":"pheatmap object","code":""},{"path":"https://sydneybiox.github.io/spicyR/reference/signifPlot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plots result of signifPlot. — signifPlot","text":"","code":"data(spicyTest)  p <- signifPlot(spicyTest, breaks = c(-3, 3, 0.5)) # plot includes unicode characters, do not use default pdf device ggplot2::ggsave(p, filename = tempfile(), device = cairo_pdf) #> Saving 6.67 x 6.67 in image"},{"path":"https://sydneybiox.github.io/spicyR/reference/spicy.html","id":null,"dir":"Reference","previous_headings":"","what":"Performs spatial tests on spatial cytometry data. — SpicyResults-class","title":"Performs spatial tests on spatial cytometry data. — SpicyResults-class","text":"Performs spatial tests spatial cytometry data.","code":""},{"path":"https://sydneybiox.github.io/spicyR/reference/spicy.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Performs spatial tests on spatial cytometry data. — SpicyResults-class","text":"","code":"spicy(   cells,   condition,   subject = NULL,   covariates = NULL,   from = NULL,   to = NULL,   imageIDCol = \"imageID\",   cellTypeCol = \"cellType\",   spatialCoordCols = c(\"x\", \"y\"),   alternateResult = NULL,   verbose = FALSE,   weights = TRUE,   weightsByPair = FALSE,   weightFactor = 1,   window = \"convex\",   window.length = NULL,   BPPARAM = BiocParallel::SerialParam(),   sigma = NULL,   Rs = NULL,   minLambda = 0.05,   edgeCorrect = TRUE,   includeZeroCells = FALSE,   ... )"},{"path":"https://sydneybiox.github.io/spicyR/reference/spicy.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Performs spatial tests on spatial cytometry data. — SpicyResults-class","text":"cells SummarizedExperiment data frame contains least  variables x y, giving location coordinates cell, cellType. condition Vector conditions tested corresponding image. subject Vector subject IDs corresponding image cells data frame. covariates Vector covariate names included mixed effects model fixed effects. vector cell types like compare vector vector cell types like compare vector imageIDCol image ID using SingleCellExperiment. cellTypeCol cell type using SingleCellExperiment. spatialCoordCols spatial coordinates using SingleCellExperiment. alternateResult pairwise association statistic combination celltypes image. verbose logical indicating whether output messages. weights logical indicating whether include weights based cell counts. weightsByPair logical indicating whether weights calculated cell type pair. weightFactor numeric controls convexity weight function. window window around regions 'square', 'convex' 'concave'. window.length tuning parameter controlling level concavity estimating concave windows. BPPARAM BiocParallelParam object. sigma numeric variable used scaling fitting inhomogeneous L-curves. Rs vector radii measures association calculated. minLambda Minimum value density scaling fitting inhomogeneous L-curves. edgeCorrect logical indicating whether perform edge correction. includeZeroCells logical indicating whether include cells zero counts pairwise association calculation. ... options.","code":""},{"path":"https://sydneybiox.github.io/spicyR/reference/spicy.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Performs spatial tests on spatial cytometry data. — SpicyResults-class","text":"Data frame p-values.","code":""},{"path":"https://sydneybiox.github.io/spicyR/reference/spicy.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Performs spatial tests on spatial cytometry data. — SpicyResults-class","text":"","code":"data(\"diabetesData\")  # Test with random effect for patient on a pairwise combination of cell # types. spicy(diabetesData,   condition = \"stage\", subject = \"case\",   from = \"Tc\", to = \"Th\" ) #>  #> Number of cell type pairs: 1 #> Number of differentially localised cell type pairs:  #> [1] 0  # Test all pairwise combinations of cell types without random effect of # patient. if (FALSE) { # \\dontrun{ spicyTest <- spicy(diabetesData, condition = \"stage\", subject = \"case\") } # }  # Test all pairwise combination of cell types with random effect of patient. if (FALSE) { # \\dontrun{ spicy(diabetesData, condition = \"condition\", subject = \"subject\") } # }"},{"path":"https://sydneybiox.github.io/spicyR/reference/spicyBoxPlot.html","id":null,"dir":"Reference","previous_headings":"","what":"Plots boxplot for a specified cell-cell relationship — spicyBoxPlot","title":"Plots boxplot for a specified cell-cell relationship — spicyBoxPlot","text":"Plots boxplot specified cell-cell relationship","code":""},{"path":"https://sydneybiox.github.io/spicyR/reference/spicyBoxPlot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plots boxplot for a specified cell-cell relationship — spicyBoxPlot","text":"","code":"spicyBoxPlot(results, from = NULL, to = NULL, rank = NULL)"},{"path":"https://sydneybiox.github.io/spicyR/reference/spicyBoxPlot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plots boxplot for a specified cell-cell relationship — spicyBoxPlot","text":"results Data frame obtained spicy. Cell type like compare cell type. Cell type like compare cell type. rank Ranking cell type terms p-value, smaller p-value higher rank.","code":""},{"path":"https://sydneybiox.github.io/spicyR/reference/spicyBoxPlot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plots boxplot for a specified cell-cell relationship — spicyBoxPlot","text":"ggplot2 boxplot","code":""},{"path":"https://sydneybiox.github.io/spicyR/reference/spicyBoxPlot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plots boxplot for a specified cell-cell relationship — spicyBoxPlot","text":"","code":"data(spicyTest)  spicyBoxPlot(spicyTest,              rank = 1) #> Warning: Removed 53 rows containing non-finite outside the scale range #> (`stat_boxplot()`). #> Warning: The following aesthetics were dropped during statistical transformation: label. #> ℹ This can happen when ggplot fails to infer the correct grouping structure in #>   the data. #> ℹ Did you forget to specify a `group` aesthetic or to convert a numerical #>   variable into a factor?"},{"path":"https://sydneybiox.github.io/spicyR/reference/spicyTest.html","id":null,"dir":"Reference","previous_headings":"","what":"Results from spicy for diabetesData — spicyTest","title":"Results from spicy for diabetesData — spicyTest","text":"Results call: spicyTest <- spicy(diabetesData,                    condition = \"condition\",                    subject = \"subject\")","code":""},{"path":"https://sydneybiox.github.io/spicyR/reference/spicyTest.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Results from spicy for diabetesData — spicyTest","text":"","code":"data(\"spicyTest\")"},{"path":"https://sydneybiox.github.io/spicyR/reference/spicyTest.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Results from spicy for diabetesData — spicyTest","text":"spicyTest spicy object","code":""},{"path":"https://sydneybiox.github.io/spicyR/reference/topPairs.html","id":null,"dir":"Reference","previous_headings":"","what":"A table of the significant results from spicy tests — topPairs","title":"A table of the significant results from spicy tests — topPairs","text":"table significant results spicy tests","code":""},{"path":"https://sydneybiox.github.io/spicyR/reference/topPairs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A table of the significant results from spicy tests — topPairs","text":"","code":"topPairs(x, coef = NULL, n = 10, adj = \"fdr\", cutoff = NULL, figures = NULL)"},{"path":"https://sydneybiox.github.io/spicyR/reference/topPairs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"A table of the significant results from spicy tests — topPairs","text":"x output spicy. coef coefficient list. n Extract top n significant pairs. adj p-value adjustment method use, argument p.adjust(). cutoff p-value threshold extract significant pairs. figures Round `figures` significant figures.","code":""},{"path":"https://sydneybiox.github.io/spicyR/reference/topPairs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"A table of the significant results from spicy tests — topPairs","text":"data.frame","code":""},{"path":"https://sydneybiox.github.io/spicyR/reference/topPairs.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"A table of the significant results from spicy tests — topPairs","text":"","code":"data(spicyTest) topPairs(spicyTest) #>                          intercept coefficient      p.value adj.pvalue #> beta__delta           1.815458e+02  -48.735693 0.0005033247 0.07169649 #> delta__beta           1.817943e+02  -48.166076 0.0005601288 0.07169649 #> B__unknown           -3.606296e-15   11.770938 0.0052338392 0.42051606 #> delta__delta          2.089550e+02  -52.061196 0.0125129422 0.42051606 #> unknown__macrophage   1.007337e+01  -15.826919 0.0207410908 0.42051606 #> unknown__B           -5.161932e-15   12.142848 0.0225855419 0.42051606 #> macrophage__unknown   1.004424e+01  -14.471666 0.0244668075 0.42051606 #> B__Th                 1.571479e-15   26.847934 0.0245039854 0.42051606 #> otherimmune__naiveTc -9.292508e+00   33.584755 0.0255812944 0.42051606 #> ductal__ductal        1.481580e+01   -8.632569 0.0266935703 0.42051606 #>                             from         to #> beta__delta                 beta      delta #> delta__beta                delta       beta #> B__unknown                     B    unknown #> delta__delta               delta      delta #> unknown__macrophage      unknown macrophage #> unknown__B               unknown          B #> macrophage__unknown   macrophage    unknown #> B__Th                          B         Th #> otherimmune__naiveTc otherimmune    naiveTc #> ductal__ductal            ductal     ductal"}]
